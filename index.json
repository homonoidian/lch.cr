{"repository_name":"lch","body":"# LCH.cr\n\n> Implementation mostly copied from [chroma.js](https://github.com/gka/chroma.js)\n\nA shard to convert LCH colors to RGB and RGB colors to LCH.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     lch:\n       github: homonoidian/lch.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"lch\"\n\nLCH.rgb2lch(r: 123, g: 40, b: 123)         # {32.17, 55.27, 327.61}\nLCH.lch2rgb(l: 32.17, c: 55.27, h: 327.61) # {123, 40, 123}\n# or LCH.rgb2lch([123, 40, 123])\n# or LCH.lch2rgb([32.17, 55.27, 327.61])\n# or any other Indexable\n```\n\nSeveral other, related conversion methods are public, but `rgb2lch` and\n`lch2rgb` are the main ones.\n\n## Rough benchmark\n\n```text\n                        fast path 353.81M (  2.83ns) (± 4.35%)  0.0B/op         fastest\n                       rgb to lch   5.69M (175.74ns) (± 0.90%)  0.0B/op   62.18× slower\n              lch to rgb, in sRGB   9.63M (103.83ns) (± 1.00%)  0.0B/op   36.74× slower\nlch to rgb with fitting into sRGB 486.06k (  2.06µs) (± 0.59%)  0.0B/op  727.92× slower\n```\n\nYour numbers may be different, but in general, fitting into sRGB will always be slower because doing this requires multiple conversions and a loop.\n\n## Contributing\n\n1. Fork it (<https://github.com/homonoidian/lch.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Alexey Yurchenko](https://github.com/homonoidian) - creator and maintainer\n","program":{"html_id":"lch/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"lch","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"lch/LCH","path":"LCH.html","kind":"module","full_name":"LCH","name":"LCH","abstract":false,"locations":[{"filename":"src/lch.cr","line_number":14,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L14"}],"repository_name":"lch","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"lch/LCH","kind":"module","full_name":"LCH","name":"LCH"}],"doc":"Methods for LCH to RGB and RGB to LCH conversion.\n\nImplementation mostly copied from [chroma.js](https://github.com/gka/chroma.js)\n\nD65 standard referent is used during conversion.\n\nCIELCH to sRGB conversion may be lossy. sRGB to CIELCH shouldn't\nbe lossy, but might still fall prey to precision errors.\n\n```\nLCH.rgb2lch(123, 40, 123)         # {32.17, 55.27, 327.61}\nLCH.lch2rgb(32.17, 55.27, 327.61) # {123, 40, 123}\n```","summary":"<p>Methods for LCH to RGB and RGB to LCH conversion.</p>","instance_methods":[{"html_id":"lab2lch(l,a,b)-instance-method","name":"lab2lch","doc":"Returns a CIELCh L, C, H tuple for the given CIELAB color.","summary":"<p>Returns a CIELCh L, C, H tuple for the given CIELAB color.</p>","abstract":false,"args":[{"name":"l","external_name":"l","restriction":""},{"name":"a","external_name":"a","restriction":""},{"name":"b","external_name":"b","restriction":""}],"args_string":"(l, a, b)","args_html":"(l, a, b)","location":{"filename":"src/lch.cr","line_number":151,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L151"},"def":{"name":"lab2lch","args":[{"name":"l","external_name":"l","restriction":""},{"name":"a","external_name":"a","restriction":""},{"name":"b","external_name":"b","restriction":""}],"visibility":"Public","body":"c = Math.sqrt((a ** 2) + (b ** 2))\nh = ((((Math.atan2(b, a)) * 180) / Math::PI) + 360) % 360\n{l, c, h}\n"}},{"html_id":"lab2srgb(l,a,b)-instance-method","name":"lab2srgb","doc":"Returns an RGB tuple for the given CIELAB color.","summary":"<p>Returns an RGB tuple for the given CIELAB color.</p>","abstract":false,"args":[{"name":"l","external_name":"l","restriction":""},{"name":"a","external_name":"a","restriction":""},{"name":"b","external_name":"b","restriction":""}],"args_string":"(l, a, b)","args_html":"(l, a, b)","location":{"filename":"src/lch.cr","line_number":41,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L41"},"def":{"name":"lab2srgb","args":[{"name":"l","external_name":"l","restriction":""},{"name":"a","external_name":"a","restriction":""},{"name":"b","external_name":"b","restriction":""}],"visibility":"Public","body":"y = (l + 16) / 116\nx = y + (a / 500)\nz = y - (b / 200)\nx = D65_X * (lab_xyz(x))\ny = D65_Y * (lab_xyz(y))\nz = D65_Z * (lab_xyz(z))\nr = xyz_srgb(((3.2404542 * x) - (1.5371385 * y)) - (0.4985314 * z))\ng = xyz_srgb(((-0.9692660 * x) + (1.8760108 * y)) + (0.0415560 * z))\nb = xyz_srgb(((0.0556434 * x) - (0.2040259 * y)) + (1.0572252 * z))\n{r, g, b}\n"}},{"html_id":"lch2lab(l,c,h)-instance-method","name":"lch2lab","doc":"Returns a CIELAB tuple for the given LCH color.","summary":"<p>Returns a CIELAB tuple for the given LCH color.</p>","abstract":false,"args":[{"name":"l","external_name":"l","restriction":""},{"name":"c","external_name":"c","restriction":""},{"name":"h","external_name":"h","restriction":""}],"args_string":"(l, c, h)","args_html":"(l, c, h)","location":{"filename":"src/lch.cr","line_number":58,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L58"},"def":{"name":"lch2lab","args":[{"name":"l","external_name":"l","restriction":""},{"name":"c","external_name":"c","restriction":""},{"name":"h","external_name":"h","restriction":""}],"visibility":"Public","body":"h = (h * Math::PI) / 180\n{l, (Math.cos(h)) * c, (Math.sin(h)) * c}\n"}},{"html_id":"lch2rgb(l:Number,c:Number,h:Number):Tuple(Int32,Int32,Int32)-instance-method","name":"lch2rgb","doc":"Returns an R, G, B tuple for the given LCH (CIELCh) color.\n\nThe lightness component *l*, percents, is clamped to (and\nshould be in) the range [0; 100].\n\nThe chroma component *c* is clamped to (and should be in)\nthe range [0; 145].\n\nThe resulting R, G, B components are in the range [0; 255].\n\n```\nLCH.lch2rgb(l: 32.17, c: 55.27, h: 327.61) # {123, 40, 123}\n```","summary":"<p>Returns an R, G, B tuple for the given LCH (CIELCh) color.</p>","abstract":false,"args":[{"name":"l","external_name":"l","restriction":"Number"},{"name":"c","external_name":"c","restriction":"Number"},{"name":"h","external_name":"h","restriction":"Number"}],"args_string":"(l : Number, c : Number, h : Number) : Tuple(Int32, Int32, Int32)","args_html":"(l : Number, c : Number, h : Number) : Tuple(Int32, Int32, Int32)","location":{"filename":"src/lch.cr","line_number":97,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L97"},"def":{"name":"lch2rgb","args":[{"name":"l","external_name":"l","restriction":"Number"},{"name":"c","external_name":"c","restriction":"Number"},{"name":"h","external_name":"h","restriction":"Number"}],"return_type":"::Tuple(Int32, Int32, Int32)","visibility":"Public","body":"if rgb = lch_as_srgb?(l, c, h)\n  r, g, b = rgb\nelse\n  hi_c = c\n  lo_c = 0\n  c = c / 2\n  while (hi_c - lo_c) > 0.0001\n    if lch_as_srgb?(l, c, h)\n      lo_c = c\n    else\n      hi_c = c\n    end\n    c = (hi_c + lo_c) / 2\n  end\n  r, g, b = lch2srgb_norm(l, c, h)\nend\n{(255 * r).round.to_i.clamp(0..255), (255 * g).round.to_i.clamp(0..255), (255 * b).round.to_i.clamp(0..255)}\n"}},{"html_id":"lch2rgb(lch:Indexable):Tuple(Int32,Int32,Int32)-instance-method","name":"lch2rgb","doc":"Converts the first three items in *lch* to RGB.\n\nAssumes the indexable to be `Number`-typed, and contain at\nleast three values -- for L, C, and H, correspondingly.\n\n```\nLCH.lch2rgb([32.17, 55.27, 327.61]) # {123, 40, 123}\nLCH.lch2rgb({32.17, 55.27, 327.61}) # {123, 40, 123}\n# ... etc\n```","summary":"<p>Converts the first three items in <em>lch</em> to RGB.</p>","abstract":false,"args":[{"name":"lch","external_name":"lch","restriction":"Indexable"}],"args_string":"(lch : Indexable) : Tuple(Int32, Int32, Int32)","args_html":"(lch : Indexable) : Tuple(Int32, Int32, Int32)","location":{"filename":"src/lch.cr","line_number":132,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L132"},"def":{"name":"lch2rgb","args":[{"name":"lch","external_name":"lch","restriction":"Indexable"}],"return_type":"::Tuple(Int32, Int32, Int32)","visibility":"Public","body":"lch2rgb(lch[0], lch[1], lch[2])"}},{"html_id":"rgb2lab(r,g,b)-instance-method","name":"rgb2lab","doc":"Returns a CIELAB L, a, b tuple for the given RGB color.","summary":"<p>Returns a CIELAB L, a, b tuple for the given RGB color.</p>","abstract":false,"args":[{"name":"r","external_name":"r","restriction":""},{"name":"g","external_name":"g","restriction":""},{"name":"b","external_name":"b","restriction":""}],"args_string":"(r, g, b)","args_html":"(r, g, b)","location":{"filename":"src/lch.cr","line_number":169,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L169"},"def":{"name":"rgb2lab","args":[{"name":"r","external_name":"r","restriction":""},{"name":"g","external_name":"g","restriction":""},{"name":"b","external_name":"b","restriction":""}],"visibility":"Public","body":"x, y, z = rgb2xyz(r, g, b)\nl = (116 * y) - 16\n{l < 0 ? 0.0 : l, 500 * (x - y), 200 * (y - z)}\n"}},{"html_id":"rgb2lch(r:Int,g:Int,b:Int):Tuple(Float64,Float64,Float64)-instance-method","name":"rgb2lch","doc":"Returns an L, C, H tuple for the given RGB color.\n\n*r*, *g*, and *b* are clamped between [0; 255].\n\nThe resulting lightness component L is in percents, in range\n[0; 100], rounded to two digits after the decimal place.\n\nThe resulting chroma component C is in range [0; 145], rounded\nto two digits after the decimal place.\n\nThe resulting hue component H is in degress, in range [0; 360],\nrounded to two digits after the decimal place.\n\n```\nLCH.rgb2lch(r: 123, g: 40, b: 123) # {32.17, 55.27, 327.61}\n```","summary":"<p>Returns an L, C, H tuple for the given RGB color.</p>","abstract":false,"args":[{"name":"r","external_name":"r","restriction":"Int"},{"name":"g","external_name":"g","restriction":"Int"},{"name":"b","external_name":"b","restriction":"Int"}],"args_string":"(r : Int, g : Int, b : Int) : Tuple(Float64, Float64, Float64)","args_html":"(r : Int, g : Int, b : Int) : Tuple(Float64, Float64, Float64)","location":{"filename":"src/lch.cr","line_number":191,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L191"},"def":{"name":"rgb2lch","args":[{"name":"r","external_name":"r","restriction":"Int"},{"name":"g","external_name":"g","restriction":"Int"},{"name":"b","external_name":"b","restriction":"Int"}],"return_type":"::Tuple(Float64, Float64, Float64)","visibility":"Public","body":"r = r.clamp(0..255)\ng = g.clamp(0..255)\nb = b.clamp(0..255)\ncase {r, g, b}\nwhen {0, 0, 0}\n  return {0.0, 0.0, 0.0}\nwhen {255, 0, 0}\n  return {54.0, 105.0, 40.0}\nwhen {0, 255, 0}\n  return {87.82, 113.32, 134.38}\nwhen {0, 0, 255}\n  return {29.57, 131.0, 301.36}\nwhen {255, 255, 255}\n  return {100.0, 0.0, 0.0}\nend\nl, c, h = lab2lch(*rgb2lab(r, g, b))\n{l.round(2), c.round(2), h.round(2)}\n"}},{"html_id":"rgb2lch(rgb:Indexable):Tuple(Float64,Float64,Float64)-instance-method","name":"rgb2lch","doc":"Converts the first three items in *rgb* to LCH.\n\nAssumes the indexable to be `Int`-typed, and contain at\nleast three values -- for R, G, and B, correspondingly.\n\n```\nLCH.rgb2lch([123, 40, 123]) # {32.17, 55.27, 327.61}\nLCH.rgb2lch({123, 40, 123}) # {32.17, 55.27, 327.61}\n# ... etc\n```","summary":"<p>Converts the first three items in <em>rgb</em> to LCH.</p>","abstract":false,"args":[{"name":"rgb","external_name":"rgb","restriction":"Indexable"}],"args_string":"(rgb : Indexable) : Tuple(Float64, Float64, Float64)","args_html":"(rgb : Indexable) : Tuple(Float64, Float64, Float64)","location":{"filename":"src/lch.cr","line_number":219,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L219"},"def":{"name":"rgb2lch","args":[{"name":"rgb","external_name":"rgb","restriction":"Indexable"}],"return_type":"::Tuple(Float64, Float64, Float64)","visibility":"Public","body":"rgb2lch(rgb[0], rgb[1], rgb[2])"}},{"html_id":"rgb2xyz(r,g,b)-instance-method","name":"rgb2xyz","doc":"Returns a CIEXYZ X, Y, Z tuple for the given RGB color.","summary":"<p>Returns a CIEXYZ X, Y, Z tuple for the given RGB color.</p>","abstract":false,"args":[{"name":"r","external_name":"r","restriction":""},{"name":"g","external_name":"g","restriction":""},{"name":"b","external_name":"b","restriction":""}],"args_string":"(r, g, b)","args_html":"(r, g, b)","location":{"filename":"src/lch.cr","line_number":158,"url":"https://github.com/homonoidian/lch.cr/blob/956b3aa8f83e574fc4dd697a13373076b0fa4ec5/src/lch.cr#L158"},"def":{"name":"rgb2xyz","args":[{"name":"r","external_name":"r","restriction":""},{"name":"g","external_name":"g","restriction":""},{"name":"b","external_name":"b","restriction":""}],"visibility":"Public","body":"r, g, b = rgb_xyz(r), rgb_xyz(g), rgb_xyz(b)\nx = xyz_lab((((0.4124564 * r) + (0.3575761 * g)) + (0.1804375 * b)) / D65_X)\ny = xyz_lab((((0.2126729 * r) + (0.7151522 * g)) + (0.0721750 * b)) / D65_Y)\nz = xyz_lab((((0.0193339 * r) + (0.1191920 * g)) + (0.9503041 * b)) / D65_Z)\n{x, y, z}\n"}}]}]}}